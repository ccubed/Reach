@	Reach Mux
@	Rituals Tracking System
@	Coded by: Gizmo AKA Ourea, Alzie
@	Coded for: The Reach Mux
@	Email: ccubed.techno@gmail.com
@	Date Last Touched: 2/9/2014
@----------------------------------------------------------------------------
@	Purpose: Code a way to track ritual usage and end dates for renewals.
@----------------------------------------------------------------------------
@	Organization
@	F.* - Function - Player does not interact
@	CMD.* - Command - Player does interact
@	LIT.* - Literal - Player sees but does not interact
@	F.PARSE.* - Parser - Player does not interact
@	F.DISP.* - Display Formatter - Player sees but does not interact
@	F.FORMAT.* - Data Formatter - Player does not interact
@----------------------------------------------------------------------------
&CMD.RITUALS #6457=$+rituals:@assert [orflags(%#,W Z w)]=[pemit(%#,Huh? \(Type "help" for help.\))];@pemit %#=[u(F.DISP.RITUALS)]

&CMD.RITUALS.SWITCH #6457=$+rituals/* *:@assert [orflags(%#,W Z w)]=[pemit(%#,Huh? \(Type "help" for help.\))];@assert [match(ADD VIEW NOTES REMOVE,%0)]=[pemit(%#,%0 is not a valid switch. Please see +help rituals.)];@pemit %#=[switch(match(ADD VIEW NOTES REMOVE,%0),1,[u(F.SWITCH.ADD,%1)],2,[u(F.SWITCH.VIEW,%1)],3,[u(F.SWITCH.NOTES,%1)],4,[u(F.SWITCH.REMOVE,%1)])]

&F.SWITCH.ADD #6457=[setq(0,[xget(me,DATA.CID)])][if(eq(words(%0,|),6),[if(words(xget(me,DATA.RITUALS),:),[set(me,DATA.RITUALS:[xget(me,DATA.RITUALS)]:%q0|%0)],[set(me,DATA.RITUALS:%q0|%0)])][set(me,DATA.CID:[inc(%q0)])]RITUALS: Successfully added Ritual as ID %q0.,ERROR: Add expects 6 arguments. See +help rituals.)]

&F.SWITCH.VIEW #6457=[switch([hasattr(me,DATA.%0.NOTES)][match([xget(me,DATA.RITUALS)],*%0*)],00,ERROR: ID %0 was not found.,10,ERROR: Notes found but ID %0 is not in data. Removing Notes.[set(me,DATA.%0.NOTES:)],11,[u(F.DISP.DETAILS,%0,[extract(xget(me,DATA.RITUALS),%0,1,:)])],01,[u(F.DISP.DETAILS,%0,[extract(xget(me,DATA.RITUALS),%0,1,:)])])]

&F.SWITCH.NOTES #6457=[if([match([xget(me,DATA.RITUALS)],*[before(%0,=)]*)],[if(eq(words(%0,=),2),[setq(0,[after(%0,=)])][set(me,DATA.[before(%0,=)].NOTES:%q0)]RITUALS: Notes added to ID [before(%0,=)].,ERROR: ID %0 found but no notes provided.)],ERROR: ID %0 not found in data to add notes to.)]

&F.SWITCH.REMOVE #6457=[switch([hasattr(me,DATA.%0.NOTES)][match([xget(me,DATA.RITUALS)],*%0*)],00,ERROR: ID %0 not found to remove.,01,[setq(0,[match(xget(me,DATA.RITUALS),%0*,:)])][set(me,DATA.RITUALS:[ldelete(xget(me,DATA.RITUALS),%q0,:)])],10,[set(me,DATA.%0.NOTES:)]ERROR: Found notes for ID %0 but no data. Removed Notes.,11,RITUALS: Removed Ritual %0 from data.[set(me,DATA.%0.NOTES:)][setq(0,[match(xget(me,DATA.RITUALS),%0*,:)])][set(me,DATA.RITUALS:[ldelete(xget(me,DATA.RITUALS),%q0,:)])])]

&F.DISP.RITUALS #6457=[u(LIT.HEADER)][if(words(xget(me,DATA.RITUALS),:),%R[u(F.PARSE.DATA)],%R%R[center([ansi(hw,No Rituals Logged)],78)]%R%R)][u(LIT.FOOTER)]

&F.PARSE.DATA #6457=[iter(xget(me,DATA.RITUALS),[u(F.FORMAT.DATA,##)]%R,:,@@)]

&F.FORMAT.DATA #6457=[ljust([extract(%0,1,1,|)].,10)][ljust([extract(%0,2,1,|)],30)][ljust([extract(%0,6,1,|)],25)][ljust([extract(%0,4,1,|)],10)]

&LIT.HEADER #6457=[center([ansi(hx,>[ansi(hw,Ritual Tracker)]<)],78,[ansi(nr,=)])]%R[ljust(ID,10)][ljust(RITUALIST,30)][ljust(TARGET,25)][ljust(DATE STOP,10)]%R[ansi(nr,repeat(=,78))]

&LIT.FOOTER #6457=[center([ansi(hx,>[ansi(hw,The Reach Mux)]<)],78,[ansi(nr,=)])]

&F.DISP.DETAILS #6457=[center([ansi(hx,>[ansi(hw,Ritual Details for ID %0)]<)],78,[ansi(nr,=)])]%R[ansi(hw,Date Done:)]%b[ljust([extract(%1,3,1,|)],30)]%R[ansi(hw,Rite Name:)]%b[ljust([extract(%1,5,1,|)],30)]%R[ansi(hw,Target:)]%b[ljust([extract(%1,6,1,|)],25)]%R[ansi(hw,Number of Successes:)]%b[ljust([extract(%1,7,1,|)],10)]%R[ansi(nr,[repeat(=,78)])]%R[eval(xget(me,DATA.%0.NOTES))]%R[ansi(nr,[repeat(=,78)])]

&DATA.CID #6457=1

&DATA.RITUALS #6457=