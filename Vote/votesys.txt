@	Reach Mux
@	+Vote System
@	Coded by: Gizmo AKA Ourea, Alzie
@	Coded for: The Reach Mux
@	Email: ccubed.techno@gmail.com
@	Date Last Touched: 2/9/2014
@----------------------------------------------------------------------------
@	Purpose: Make a system to allow individuals to make votes on issues
@	that are locked to a lock string
@----------------------------------------------------------------------------
@	#18901
@	# takes
@	#   user name
@	#   forum path name
@	#   topic title
@	#   post body
@	&fn_simple_post_new_topic
@
@
@	Storage:
@	&VOTE_[ID] - Title
@	&DATA_[ID]_VOTERS - People Who Have Voted
@	&DATA_[ID]_VOTES - Tally of Votes in form ID:NUMBER
@	&DATA_[ID]_OPTIONS - Options in the form ID:Text/ID:Text, etc
@	&LOCK_[ID]_LOCK_PLAYERS_BLOCKED - list of players blocked from voting
@	&LOCK_[ID]_LOCK_PLAYERS_ALLOWED - list of players allowed to vote
@	&LOCK_[ID]_LOCK_FACTION - faction to lock a vote to
@	&LOCK_[ID]_LOCK_TEMPLATE - Lock vote to template(s)
@
@
@	Who Can Vote: To vote, a player must pass one of LOCK_FACTION, LOCK_TEMPLATE or LOCK_PLAYERS_ALLOWED AND NOT be in LOCK_PLAYERS_BLOCKED
@	Note that LOCK_PLAYERS_BLOCKED is considered a master lock. 
@	Blocked are not allowed to vote regardless of passing any other locks.

@	CMD.VOTE 
@	Passed: Nothing
@	Returns: Overview of issues to vote on
&CMD.VOTE #18901=$+vote:@switch [attrcnt(me/LOCK*)]=0,{@pemit %#=[ansi(hw,VOTE:)]%bThere are currently no issues to vote on.},{@pemit %#=[u(F.DISP.VOTES,%#)]}

@	CMD.VOTE.ADD
@	Passed: Title
@	Purpose: Addes a vote to the system
&CMD.VOTE.ADD #18901=$+vote/add *:@assert [isstaff(%#)];@assert [t(%0)]={@pemit %#=[ansi(hw,VOTE:)]%bYou didn't specify a title.};[set(me,VOTE_[setr(a,[inc(xget(me,DATA.CID))])]:%0)][set(me,DATA.CID:%qA)];@pemit %#=[ansi(hw,VOTE:)]%bAdded vote %qA with title %0

@	CMD.VOTE.SET
@	Passed: ID,Option,Value
@	Purpose: Set Locks and Due on an issue
&CMD.VOTE.SET #18901=$+vote/set */*=*:

@	CMD.VOTE.OPTIONS
@	Passed: ID,Switch,Values
@	Purpose: Add and Delete the choices for issues
&CMD.VOTE.OPTIONS #18901=$+vote/opt */*=*:

@	CMD.VOTE.VOTE
@	Passed: ID, Option ID
@	Purpose: Record vote on an issue
&CMD.VOTE.VOTE #18901=$+vote *=*:

@	CMD.VOTE.STATS
@	Passed: ID
@	Purpose: Display number of voters and votes breakdown
&CMD.VOTE.STATS #18901=$+vote/stats *:
&CMD.VOTE.CLOSE #18901=$+vote/close *:

@	F.DISP.VOTES
@	Passed: Player DBRef
@	Returns: List of issues player has to vote on
&F.DISP.VOTES #18901=[u(F.UNLOCKED,%0)][if(gt(words(%qf),0),[header([ansi(hw,VoteSys)])]%R[iter(%qF,[ljust(%i0,5)][ljust(xget(me,VOTE_##),72)][rjust([if(member(xget(me,DATA_##_VOTERS),%0),Y,N)],2)], ,%R)][footer()],[ansi(hw,VOTE:)]%bThere are currently no issues to vote on.)]

@	F.UNLOCKED
@	Passed: Player DBRef
@	Returns: List of Vote IDs Player can Access
@	Registers:
@	A - List of Lock Attributes
@	B - List of Passed Allowed Locks
@	C - List of Passed Blocked Locks (in this case, passed is bad because you were in the list of blocked people)
@	D - List of Passed Faction Locks 
@	E - List of Passed Template Locks
@	F - Final List
&F.UNLOCKED #18901=[setq(A,[lattr(me/LOCK*)])][iter(%qA,[switch([strmatch(%i0,*Blocked)][strmatch(%i0,*Allowed)][strmatch(%i0,*Faction)][strmatch(%i0,*Template)],1000,[if(member(xget(me,%i0),%0),[setq(C,[setunion(%qC,[extract(%i0,2,1,_)])])])],0100,[if(member(xget(me,%i0),%0),[setq(B,[setunion(%qB,[extract(%i0,2,1,_)])])])],0010,[if(isfaction?(%0,[xget(me,%i0)]),[setq(D,[setunion(%qD,[extract(%i0,2,1,_)])])])],0001,[if(strmatch(template(%0),[xget(me,%i0)]),[setq(E,[setunion(%qE,[extract(%i0,2,1,_)])])])], ,@)][setq(F,[setunion(%qB,%qD)])][setq(F,[setunion(%qF,%qE)])][setq(F,[setdiff(%qF,%qC)])]

&DATA.CID #18901=1